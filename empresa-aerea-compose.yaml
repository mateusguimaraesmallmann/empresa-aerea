version: '3.8'

services:

  # ================= DATA BASES =================
  mongo-db:
    image: mongo
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - empresa-aerea-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-db:
    image: postgres
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./back-end/init-databases:/docker-entrypoint-initdb.d
    networks:
      - empresa-aerea-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ================ RABBIT MQ =====================
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - empresa-aerea-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============== MICROSERVIÃ‡OS ===============

  ms-auth:
    build:
      context: ./back-end/ms-auth
      dockerfile: Dockerfile
    container_name: ms-auth
    ports:
      - "9090:9090"
    environment:
      SPRING_DATA_MONGODB_HOST: mongo-db
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: auth_db
      SPRING_DATA_MONGODB_URI: mongodb://admin:admin@mongo-db:27017/auth_db?authSource=admin
    depends_on:
      mongo-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - empresa-aerea-net

  ms-cliente:
    build:
      context: ./back-end/ms-cliente
      dockerfile: Dockerfile
    container_name: ms-cliente
    ports:
      - "9091:9091"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga:
        condition: service_started
    networks:
      - empresa-aerea-net

  ms-funcionario:
    build:
      context: ./back-end/ms-funcionario
      dockerfile: Dockerfile
    container_name: ms-funcionario
    ports:
      - "9092:9092"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - empresa-aerea-net

  ms-reserva:
    build:
      context: ./back-end/ms-reserva
      dockerfile: Dockerfile
    container_name: ms-reserva
    ports:
      - "9093:9093"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - empresa-aerea-net

  ms-voos:
    build:
      context: ./back-end/ms-voos
      dockerfile: Dockerfile
    container_name: ms-voos
    ports:
      - "9094:9094"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - empresa-aerea-net

  #================ SAGA ======================
  saga:
    build:
      context: ./back-end/saga
      dockerfile: Dockerfile
    container_name: saga
    ports:
      - "9095:9095"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - empresa-aerea-net

  # =============== API GATEWAY ===============
  api-gateway:
    build:
      context: ./back-end/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - ms-auth
      - ms-cliente
      - ms-funcionario
      - ms-reserva
      - ms-voos
      - saga
    env_file:
      - ./back-end/api-gateway/.env
    environment:
      PORT: 3000
      MS_AUTH_URL: http://ms-auth:9090
      MS_CLIENTE_URL: http://ms-cliente:9091
      MS_FUNCIONARIO_URL: http://ms-funcionario:9092
      MS_RESERVA_URL: http://ms-reserva:9093
      MS_VOOS_URL: http://ms-voos:9094
      MS_SAGA_URL: http://saga:9095
      JWT_SECRET: GV0ZXguc2hhcmVwb2025TADSDACRAZER2025GV0ZXguc2hhcmVwb
    networks:
      - empresa-aerea-net

  # =============== FRONTEND ===============
  angular-frontend:
    container_name: frontend
    build:
      context: ./front-end/
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    volumes:
      - ./front-end:/app
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - empresa-aerea-net

# =============== NETWORK ===============
networks:
  empresa-aerea-net:
    driver: bridge

# =============== VOLUMES ===============
volumes:
  rabbitmq-data:
